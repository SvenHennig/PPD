# Removed obsolete version field as recommended by Docker Compose

services:
  # Financial Prediction API Server
  api:
    build: .
    container_name: financial-prediction-api
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./best_model.pkl:/app/best_model.pkl:ro
      - ./training_results.json:/app/training_results.json:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - financial-network

  # Interactive Dashboard
  dashboard:
    build: .
    container_name: financial-prediction-dashboard
    command: ["python", "visualization_dashboard.py"]
    ports:
      - "8050:8050"
    environment:
      - DASH_DEBUG=0
      - LOG_LEVEL=INFO
      - MPLCONFIGDIR=/tmp/matplotlib
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./best_model.pkl:/app/best_model.pkl:ro
      - ./training_results.json:/app/training_results.json:ro
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - financial-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: financial-prediction-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - dashboard
    restart: unless-stopped
    networks:
      - financial-network

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: financial-prediction-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - financial-network

  # Prometheus Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: financial-prediction-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - financial-network

  # Grafana Dashboard (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: financial-prediction-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - financial-network

networks:
  financial-network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  grafana_data: 